buildscript {      // Configuration for building
  repositories {
    mavenLocal()
    jcenter()      // Bintray's repository - a fast Maven Central mirror & more
    mavenCentral()
  }
  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
    classpath 'net.idlestate:gradle-download-dependencies-plugin:1.+'
    classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.0.0')
  }
}

// this comes from gradle.properties
version=currentVersion

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'maven-publish'

configurations {
  jettyrunner
}

repositories {
  mavenLocal()
  jcenter()      // Bintray's repository - a fast Maven Central mirror & more
  mavenCentral()
}

dependencies {
  providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
  jettyrunner 'org.eclipse.jetty:jetty-runner:9.4.5.v20170502'
}


// [START gretty]
gretty {
    httpPort = 8080
    contextPath = '/'
    servletContainer = 'jetty9'  // What App Engine Flexible uses
}

task downloadJettyRunner(type: Copy) {
  from configurations.jettyrunner
  into "$buildDir/jetty-runner"
}

task printWarName {
  doLast {
    println war.archiveName
  }
}

task printVersion {
  doLast {
    println project.version
  }
}

build.dependsOn downloadJettyRunner



publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    // not sure why findProperty can't be used with ?: operator....
    contextUrl = project.hasProperty('artifactory_url') ? project.getProperty('artifactory_url') : 'https://meremortal.jfrog.io/meremortal/'
    publish {
        repository {
            repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
            username = project.hasProperty('artifactory_user') ? project.getProperty('artifactory_user') : ""; // The publisher user name
            password = project.hasProperty('artifactory_password') ? project.getProperty('artifactory_password') : ""; // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}
